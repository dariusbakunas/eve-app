# source: http://localhost:4000/graphql
# timestamp: Wed Nov 20 2019 21:51:13 GMT-0500 (Eastern Standard Time)

type Alliance {
  id: ID!
  name: String!
  ticker: String!
}

type Character {
  id: ID!
  corporation: Corporation!
  name: String!
  gender: String!
  scopes: [String!]
  birthday: DateTime!
  securityStatus: Float!
  totalSp: Int
}

type Client {
  id: ID!
  name: String!
  category: String!
}

type Corporation {
  id: ID!
  alliance: Alliance
  dateFounded: DateTime
  name: String!
  memberCount: Int!
  taxRate: Float!
  ticker: String!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format
outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for
representation of dates and times using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type InventoryItem {
  id: ID!
  name: String
  description: String
}

type JournalEntries {
  total: Int!
  entries: [JournalEntry!]!
}

type JournalEntry {
  id: ID!
  amount: Float!
  balance: Float!
  character: Character
  date: DateTime!
  description: String
}

type Location {
  id: ID!
  name: String!
}

type Mutation {
  addCharacter(code: String!): Character!
  updateCharacter(id: ID!, code: String!): Character!
  removeCharacter(id: ID!): ID!
  register(input: RegistrationInput!): User!
}

enum Order {
  asc
  desc
}

enum OrderType {
  buy
  sell
}

input PageInput {
  index: Int = 0
  size: Int = 10
}

type Query {
  characters: [Character!]!
  scopes: [Scope!]!
  userByEmail(email: String!): User
  walletJournal(page: PageInput, filter: WalletJournalFilter, orderBy: WalletJournalOrderByInput): JournalEntries
  walletTransactions(page: PageInput, filter: WalletTransactionFilter, orderBy: WalletTransactionOrderByInput): WalletTransactions
}

input RegistrationInput {
  firstName: String
  lastName: String
  username: String!
  email: String!
  code: String!
}

type Scope {
  id: ID!
  name: String!
}

"""
A time string at UTC, such as 10:15:30Z, compliant with the `full-time` format
outlined in section 5.6 of the RFC 3339profile of the ISO 8601 standard for
representation of dates and times using the Gregorian calendar.
"""
scalar Time

type User {
  id: ID!
  username: String!
  firstName: String
  lastName: String
  email: String!
  status: UserStatus!
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

input WalletJournalFilter {
  characterId: ID
}

enum WalletJournalOrderBy {
  date
  amount
  character
  balance
  description
}

input WalletJournalOrderByInput {
  column: WalletJournalOrderBy!
  order: Order!
}

type WalletTransaction {
  id: ID!
  credit: Float!
  client: Client!
  character: Character
  date: DateTime!
  isBuy: Boolean!
  item: InventoryItem
  location: Location!
  quantity: Int!
  unitPrice: Float!
}

input WalletTransactionFilter {
  item: String
  characterId: ID
  orderType: OrderType
}

enum WalletTransactionOrderBy {
  date
  client
  character
  credit
  item
  quantity
  station
  unitPrice
}

input WalletTransactionOrderByInput {
  column: WalletTransactionOrderBy!
  order: Order!
}

type WalletTransactions {
  total: Int!
  transactions: [WalletTransaction!]!
}
